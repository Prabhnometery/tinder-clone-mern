{"version":3,"sources":["components/Header.js","axios.js","components/TinderCards.js","components/SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","bio","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUA+BeA,MAxBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,oBAG3C,qBACIA,UAAU,gBACVG,IAAI,mEACJC,IAAI,WAER,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAoBC,SAAS,QAAQF,UAAU,wB,0DCdhDK,E,OAJGC,EAAMC,OAAO,CAC3BC,QAAS,qD,MCuDEC,MApDf,WAAwB,IAAD,EACSC,mBAAS,IADlB,mBACZC,EADY,KACJC,EADI,KAuBnB,OApBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,gBADhC,OACUC,EADV,OAGIJ,EAAUI,EAAIC,MAHlB,4CADY,uBAAC,WAAD,wBAOZC,KACD,IAEHC,QAAQC,IAAIT,GAWR,qBAAKX,UAAU,cAAf,SACI,qBAAKA,UAAU,8BAAf,SACKW,EAAOU,KAAI,SAAAC,GAAM,OACd,cAAC,IAAD,CACItB,UAAU,QAEVuB,aAAmB,OACnBC,QAAS,SAACC,GAAD,OAhBFC,EAgBuBJ,EAAOK,UAfrDR,QAAQC,IAAR,oBAAyBM,IADd,IAAYA,GAiBPE,iBAAkB,kBAblBD,EAamCL,EAAOK,UAZ1DR,QAAQC,IAAR,UAAeO,EAAf,qBADe,IAACA,GAQJ,SAMI,sBACIE,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAOS,OAAhB,MACxB/B,UAAU,OAFd,UAKI,6BAAI,iCAAQ,4BAAIsB,EAAOK,WACvB,6BAAKL,EAAOU,UAVXV,EAAOK,c,2FCCrBM,MAzBf,WACI,OACI,sBAAKjC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,wBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAYD,UAAU,2BAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gB,MCTvBgC,MAZf,WACE,OAEE,sBAAKlC,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCDSmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bbf73c89.chunk.js","sourcesContent":["import React from 'react';\nimport PersonIcon from '@material-ui/icons/Person';\nimport IconButton from '@material-ui/core/IconButton';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\n\nimport './Header.css';\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <IconButton>\n                <PersonIcon fontSize=\"large\" className=\"header___icon\"/>\n            </IconButton>\n\n            <img \n                className=\"header___logo\"\n                src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\"\n                alt=\"tinder\" />\n\n            <IconButton>\n                <QuestionAnswerIcon fontSize=\"large\" className=\"header___icon\" />\n            </IconButton>\n\n            \n\n        </div>\n\n    )\n\n}\n\nexport default Header;\n","import axios from 'axios';\n\nconst instance =  axios.create({\n    baseURL: 'https://tinder-node-clone-backend.herokuapp.com/'\n})\n\nexport default instance;\n","import React, { useState, useEffect } from 'react';\nimport TinderCard from 'react-tinder-card';\n\nimport axios from '../axios';\nimport './TinderCards.css';\n\nfunction TinderCards() {\n    const [people, setPeople] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const req = await axios.get('/tinder/card');\n\n            setPeople(req.data)\n        }\n\n        fetchData();\n    }, []);\n\n    console.log(people)\n\n    const swiped = (direction, nameToDelete) => {\n        console.log(`removing: ${nameToDelete}`)\n    }\n\n    const outOfFrame = (name) => {\n        console.log(`${name} left the screen`)\n    }\n\n    return (\n        <div className=\"tinderCards\">\n            <div className=\"tinderCards___cardContainer\">\n                {people.map(person => (\n                    <TinderCard \n                        className=\"swipe\"\n                        key={person.name}\n                        preventSwipe={'up','down'}\n                        onSwipe={(dir) => swiped(dir, person.name)}\n                        onCardLeftScreen={() => outOfFrame(person.name)}>\n                        <div \n                            style={{ backgroundImage: `url(${person.imgUrl})`}}\n                            className='card'\n                        \n                        >\n                            <h3><strong><i>{person.name}</i></strong></h3>\n                            <h4>{person.bio}</h4>\n\n                        </div>\n                    </TinderCard>\n\n                ))}\n            </div>\n         \n\n        </div>\n    )\n}\n\nexport default TinderCards;\n","import React from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nimport './SwipeButtons.css';\n\nfunction SwipeButtons() {\n    return (\n        <div className='swipeButtons'>\n            <IconButton className='swipeButtons___repeat'>\n                <ReplayIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className='swipeButtons___left'>\n                <CloseIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className='swipeButtons___star'>\n                <StarRateIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className='swipeButtons___right'>\n                <FavoriteIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton className='swipeButtons___lightning'>\n                <FlashOnIcon fontSize=\"large\" />\n            </IconButton>\n        </div>\n\n\n    )\n\n}\n\nexport default SwipeButtons;\n","import React from 'react';\nimport Header from './components/Header';\nimport TinderCards from './components/TinderCards';\nimport SwipeButtons from './components/SwipeButtons';\nimport './App.css';\n\nfunction App() {\n  return (\n    \n    <div className=\"app\">\n\n      <Header />\n      <TinderCards />\n      <SwipeButtons />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}